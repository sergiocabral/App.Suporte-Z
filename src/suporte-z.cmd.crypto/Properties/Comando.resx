<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="formPrincipal_buttonAcao_Hint" xml:space="preserve">
    <value>Performs the action...\neither encryption or decryption.</value>
  </data>
  <data name="formPrincipal_checkBoxAcaoAutomatico_Hint" xml:space="preserve">
    <value>When activated performs the process\nof encryption/decryption automatically.\n\nWhen disabled is necessary to activate\nthe button to start the process of\nencryption/decryption.</value>
  </data>
  <data name="formPrincipal_labelSenha" xml:space="preserve">
    <value>&amp;Password</value>
  </data>
  <data name="formPrincipal_labelValorEntrada" xml:space="preserve">
    <value>&amp;Input value</value>
  </data>
  <data name="formPrincipal_labelValorSaida" xml:space="preserve">
    <value>&amp;Output value</value>
  </data>
  <data name="formPrincipal_menuItem_Biblioteca_Algoritmo" xml:space="preserve">
    <value>Encryption algorithm</value>
  </data>
  <data name="formPrincipal_menuItem_Biblioteca_Clipboard" xml:space="preserve">
    <value>Send result to &amp;clipboard</value>
  </data>
  <data name="formPrincipal_menuItem_Biblioteca_ClipboardControlVPassword" xml:space="preserve">
    <value>Binds the value of the password to clipboard</value>
  </data>
  <data name="formPrincipal_menuItem_Biblioteca_ClipboardControlVValue" xml:space="preserve">
    <value>Binds the value of the input text to the clipboard</value>
  </data>
  <data name="formPrincipal_menuItem_Biblioteca_Silent" xml:space="preserve">
    <value>Not display the &amp;result</value>
  </data>
  <data name="formPrincipal_panelIconePassword_Hint" xml:space="preserve">
    <value>Enter here the password used\nto encrypt/decrypt the text.</value>
  </data>
  <data name="formPrincipal_panelIconeValorEntrada_Hint" xml:space="preserve">
    <value>Enter here the text to\nbe encrypted/decrypted.</value>
  </data>
  <data name="formPrincipal_panelIconeValorSaida_Hint" xml:space="preserve">
    <value>Here the result of the\nencryption/decryption\nprocess will be presented.\n\nThis just goes blank when\nattempting decryption fails\nbecause the text was not encrypted.</value>
  </data>
  <data name="formPrincipal_radioButtonCrypt" xml:space="preserve">
    <value>&amp;Encrypt</value>
  </data>
  <data name="formPrincipal_radioButtonCrypt_Hint" xml:space="preserve">
    <value>Enable this to encrypt the entered text.\n\nEven when no text is entered,\nan empty value will also be encrypted.</value>
  </data>
  <data name="formPrincipal_radioButtonDecrypt_Hint" xml:space="preserve">
    <value>Enable this to decrypt the entered text.\n\nThe operation will be performed only\nif the entered text is encrypted.</value>
  </data>
  <data name="formPrincipal_radioButtonDescrypt" xml:space="preserve">
    <value>&amp;Decrypt</value>
  </data>
  <data name="msgAlgoritmoInvalido" xml:space="preserve">
    <value>Invalid encryption algorithm: {0}</value>
  </data>
  <data name="msgConflitoCryptDecrypt" xml:space="preserve">
    <value>Unable to determine the action: crypt or decrypt? (choose only one)</value>
  </data>
  <data name="msgConflitoSenhaClipboard" xml:space="preserve">
    <value>Unable to determine the source of the password: informed value or clipboard? (choose only one)</value>
  </data>
  <data name="msgConflitoValorClipboard" xml:space="preserve">
    <value>Unable to determine the soruce of the text: informed value or clipboard? (choose only one)</value>
  </data>
  <data name="msgDescricao" xml:space="preserve">
    <value>The crypto command provides functions in the context\nof encryption for text strings.</value>
  </data>
  <data name="msgTextoNaoEstavaCriptografado" xml:space="preserve">
    <value>The text was not an encrypted value. Operation canceled.</value>
  </data>
  <data name="optionAlgoritmoDeCriptografia" xml:space="preserve">
    <value>Symmetric encryption algorithm.\nValid options for VALUE:\n  DES       - uses  64-bit key\n  RC2       - uses 128-bit key\n  TripleDES - uses 192-bit key\n  Rijndael  - uses 256-bit key (default)</value>
  </data>
  <data name="optionCriptografar" xml:space="preserve">
    <value>Action of encrypting (default)</value>
  </data>
  <data name="optionDescriptografar" xml:space="preserve">
    <value>Action of decrypt</value>
  </data>
  <data name="optionEnviarResultadoParaClipboard" xml:space="preserve">
    <value>Sends the result of encryption process to the clipboard</value>
  </data>
  <data name="optionInterfaceGrafica" xml:space="preserve">
    <value>Use graphical interface (GUI)</value>
  </data>
  <data name="optionModoSilencioso" xml:space="preserve">
    <value>Silent mode does not display the result of the encryption process</value>
  </data>
  <data name="optionSenha" xml:space="preserve">
    <value>Password applied in the encryption process</value>
  </data>
  <data name="optionSenhaComoClipboard" xml:space="preserve">
    <value>Get from clipboard the password applied in the encryption process</value>
  </data>
  <data name="optionTextoComoClipboard" xml:space="preserve">
    <value>Get from clipboard the text to be manipulated</value>
  </data>
  <data name="optionTextoParaManipular" xml:space="preserve">
    <value>Text to be manipulated</value>
  </data>
</root>